jenkins:
  nodes:
    - permanent:
        labelString: "master"
        mode: NORMAL
        name: "Built-In Node"
        numExecutors: 4
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
  disableRememberMe: false
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
       - id: ${JENKINS_ADMIN_ID}
         password: ${JENKINS_ADMIN_PASSWORD}
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: triggeringUsersAuthorizationStrategy
unclassified:
  buildStepOperation:
    enabled: false
  extendedEmailPublisher:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:
      Check console output at $BUILD_URL to view the results.
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: 0
    precedenceBulk: false
    useSsl: false
    watchingEnabled: false
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: http://localhost.localdomain:8080/
  mailer:
    charset: "UTF-8"
    useSsl: false
  pollSCM:
    pollingThreadCount: 10
  timestamperConfig:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
jobs:
  - script: >
      pipelineJob('build-my-app') {
        definition {
          cpsScmFlowDefinition {
            scm {
              gitSCM {
                userRemoteConfigs {
                  userRemoteConfig {
                    url('https://github.com/mosheronen/docker-exercise.git')
                    name('docker-exercise')
                    refspec('')
                    credentialsId('github')
                  }
                }
                branches {
                  branchSpec {
                    name('*/main')
                  }
                }
                browser {
                  githubWeb {
                    repoUrl('https://github.com/mosheronen/docker-exercise.git')
                  }
                }
                gitTool('git')
              }
              scriptPath('jenkins-jobs/build-my-app/Jenkinsfile')
            }
          }
        }
      }
  - script: >
      pipelineJob('run-my-app') {
        definition {
          cpsScmFlowDefinition {
            scm {
              gitSCM {
                userRemoteConfigs {
                  userRemoteConfig {
                    url('https://github.com/mosheronen/docker-exercise.git')
                    name('docker-exercise')
                    refspec('')
                    credentialsId('github')
                  }
                }
                branches {
                  branchSpec {
                    name('*/main')
                  }
                }
                browser {
                  githubWeb {
                    repoUrl('https://github.com/mosheronen/docker-exercise.git')
                  }
                }
                gitTool('git')
              }
              scriptPath('jenkins-jobs/run-my-app/Jenkinsfile')
            }
          }
        }
      }
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "github"
              username: "mosheronen"
              password: "\\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"
              description: "Username/Password Credentials for mronen git hub"



